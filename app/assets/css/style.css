@layer theme;

@custom-variant dark (&:where(.dark, .dark *));

@import "./theme.css" layer(theme);

/*
  The default t bordercolor has changed to `currentColor` in Tailwind CSS v4,
  so we've added these compatibility styles to make sure everything still
  looks the same as it did with Tailwind CSS v3.

  If we ever want to remove these styles, we need to add an explicit border
  color utility to any element that depends on these defaults.
*/



@utility no-scrollbar {
  &::-webkit-scrollbar {
    display: none;
  }
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}

@utility nav-btn {
  @apply w-9 h-9 flex hover:bg-dark-1/5  dark:hover:bg-gray-400/10 rounded-lg;
}

@utility burger {
  @apply md:hidden p-2 flex flex-col justify-around [&>span]:bg-slate-800 dark:[&>span]:bg-slate-100;
}

@utility fans-item {
  @apply hidden not-nth-of-type-[1n+5]:inline-block min-[460px]:not-nth-of-type-[1n+6]:inline-block md:not-nth-of-type-[1n+8]:inline-block lg:not-nth-of-type-[1n+11]:inline-block xl:not-nth-of-type-[1n+13]:inline-block;
}

@utility grid-stats {
  @apply grid grid-cols-[repeat(auto-fill,minmax(250px,1fr))];
}

@utility grid-gift-list {
  @apply grid grid-cols-[repeat(auto-fill,minmax(250px,1fr))];
}

@utility grid-member-list {
  @apply grid grid-cols-[repeat(auto-fill,minmax(210px,1fr))] md:grid-cols-[repeat(auto-fill,minmax(240px,1fr))] lg:grid-cols-[repeat(auto-fill,minmax(270px,1fr))] xl:grid-cols-[repeat(auto-fill,minmax(300px,1fr))];
}

@utility grid-follow-list {
  @apply grid grid-cols-[repeat(auto-fill,minmax(280px,1fr))] md:grid-cols-[repeat(auto-fill,minmax(320px,1fr))] lg:grid-cols-[repeat(auto-fill,minmax(380px,1fr))] xl:grid-cols-[repeat(auto-fill,minmax(450px,1fr))];
}

@utility grid-live-now {
  @apply grid grid-cols-[repeat(auto-fill,minmax(130px,1fr))] md:grid-cols-[repeat(auto-fill,minmax(150px,1fr))] lg:grid-cols-[repeat(auto-fill,minmax(180px,1fr))] xl:grid-cols-[repeat(auto-fill,minmax(210px,1fr))];
}


@utility text-shadow {
  text-shadow: 0px 0px 5px rgba(0, 0, 0, 1);
}


@utility bg-background {
  @apply bg-white dark:bg-dark-2;
}

@utility bg-navbar {
  @apply bg-white/80 dark:bg-dark-2/80;
}

@utility border-color-1 {
  @apply border-black/20 dark:border-white/5
}

@utility bg-container {
  @apply bg-white border border-black/10 dark:border-none dark:bg-dark-1;
}

@utility bg-container-2 {
  @apply bg-white dark:bg-dark-3;
}

@utility bg-on-container {
  @apply bg-white dark:bg-dark-2;
}
@utility bg-hover {
  @apply bg-slate-100 dark:bg-slate-200/25;
}

@utility bg-hover-2 {
  @apply bg-black/10 dark:bg-white/10
}

@utility disable-highlight {
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  -webkit-tap-highlight-color: transparent;
}

@utility pulse-color {
  @apply bg-gray-300 dark:bg-dark-3;
}

@utility pulse-color-2 {
  @apply bg-gray-200 dark:bg-dark-1;
}

@utility fade-right {
  mask-image: linear-gradient(
    to right,
    black calc(100% - 48px),
    transparent 100%
  );
}



@utility border-color-1 {
  @apply border-black/15 dark:border-white/5
}

@utility border-color-2 {
  @apply border-black/20 dark:border-white/10
}

@utility border-lightmode {
  @apply border border-black/10 dark:border-none
}

@layer components {
  button:not(:disabled), a {
    @apply cursor-pointer
    
  }

  button:not(:disabled):hover, a:hover {
    /* @apply opacity-80 */
  }
}

@layer base {
  /* *,
  ::after,
  ::before,
  ::backdrop,
  ::file-selector-button {
    @apply border-gray-100 dark:border-dark-2/60
  } */

 
  

  html {
    @apply scheme-light dark:scheme-dark;
  }
}

@utility background {
  @apply bg-white dark:bg-dark-2;
}
html {
  padding: 0 !important;
  overflow: initial !important;
  scrollbar-gutter: stable;
}


* {
  font-family: "DM Sans", sans-serif, "Noto Serif JP";
  backface-visibility: hidden;
  -webkit-tap-highlight-color: transparent;
}

:root {
  --viewport-height: 100%;
  --tooltipColor: #3f3f3f;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
input:-webkit-autofill:active {
  -webkit-transition: background-color 5000s ease-in-out 0s;
  transition: background-color 5000s ease-in-out 0s;
  -webkit-text-fill-color: #fff !important;
}

*,
*:before,
*:after { /* Safari/Chrome, other WebKit */ /* Firefox, other Gecko */
  box-sizing: border-box; /* Opera/IE 8+ */
}

a:focus,
button:focus {
  @apply outline-second-2;
}

.nuxt-progress {
  transition: 0.3s;
}
.nuxt-progress.hide {
  transition: 0.3s;
  opacity: 0;
}

body {
  overflow-x: clip;
  overflow-y: scroll;
  @apply background text-slate-900 dark:text-gray-100;
}

.burger span {
  transition: all 200ms;
  width: 100%;
  display: inline-block;
  height: 3px;
  border-radius: 3px;
  transform-origin: 0;
}
.burger.open {
  z-index: 60;
}
.burger.open span:first-child {
  transform: translate(3px) rotate(45deg);
}
.burger.open span:not(:first-child):not(:last-child) {
  opacity: 0;
}
.burger.open span:last-child {
  transform: translate(3px, 1px) rotate(-45deg);
}

/* width */
.text-stroke {
  text-shadow: 2px 0 #fff, -2px 0 #fff, 0 2px #fff, 0 -2px #fff, 1px 1px #fff, -1px -1px #fff, 1px -1px #fff, -1px 1px #fff;
}

.dark {
  --tooltipColor: #0c0d0f;
}
.dark ::-webkit-scrollbar-thumb {
  background: rgb(85, 85, 85);
}
.dark .text-stroke {
  text-shadow: 2px 0 #252525, -2px 0 #252525, 0 2px #252525, 0 -2px #252525, 1px 1px #252525, -1px -1px #252525, 1px -1px #252525, -1px 1px #252525;
}
.dark .speech-pointer-bottom {
  filter: drop-shadow(rgba(207, 217, 222, 0.2) -1px 0px 0px);
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: rgb(100, 100, 100);
}

.roundedscrollbar::-webkit-scrollbar {
  width: 15px;
}

.roundedscrollbar::-webkit-scrollbar-track {
  margin-top: 6px;
  margin-bottom: 6px;
  background: white !important;
  background-color: transparent;
}

.roundedscrollbar::-webkit-scrollbar-thumb {
  background: #dbdbdb;
  border-radius: 100vh;
  border: 4px solid white;
}

.roundedscrollbar::-webkit-scrollbar-thumb:hover {
  background: #a3a3a3;
}

.hiddenscrollbar {
  -ms-overflow-style: none; /* for Internet Explorer, Edge */
  scrollbar-width: none; /* for Firefox */
  overflow-y: scroll;
}

.hiddenscrollbar::-webkit-scrollbar {
  display: none; /* for Chrome, Safari, and Opera */
}

.dark .roundedscrollbar::-webkit-scrollbar-track {
  --tw-bg-opacity: 1;
  background-color: rgb(40 43 48/var(--tw-bg-opacity)) !important;
  @apply bg-dark-2;
}
.dark .roundedscrollbar::-webkit-scrollbar-thumb {
  @apply bg-dark-2 border-dark-1;
}
.dark .roundedscrollbar::-webkit-scrollbar-thumb:hover {
  @apply bg-dark-3/50;
}

@keyframes bounce-in {
  0% {
    transform: translateY(100%);
  }
  100% {
    transform: translateY(0%);
  }
}
.vue-recycle-scroller__slot {
  @apply sticky top-0 left-0 right-0 z-101;
}

.vue-recycle-scroller::-webkit-scrollbar-track {
  background: rgba(220, 220, 220, 0.3);
}

.dark .vue-recycle-scroller::-webkit-scrollbar-track {
  background: rgba(85, 85, 85, 0.3);
}

@media (prefers-reduced-motion) {
  * {
    transition: none !important;
  }
}
.lds-ring {
  display: inline-block;
  position: relative;
  width: 50px;
  height: 50px;
}

.lds-ring div {
  display: block;
  position: absolute;
  width: 38px;
  height: 38px;
  margin: 6px;
  border: 6px solid rgb(90, 90, 90);
  border-radius: 50%;
  animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;
  border-color: rgb(90, 90, 90) transparent transparent transparent;
}

.lds-ring div:nth-child(1) {
  animation-delay: -0.45s;
}

.lds-ring div:nth-child(2) {
  animation-delay: -0.3s;
}

.lds-ring div:nth-child(3) {
  animation-delay: -0.15s;
}

@keyframes lds-ring {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}
span.ripple {
  position: absolute; /* The absolute position we mentioned earlier */
  border-radius: 50%;
  transform: scale(0);
  animation: ripple 1800ms forwards;
  transition: 0.3s;
  @apply bg-slate-100 dark:bg-zinc-400/20;
}
span.ripple.hide {
  opacity: 0;
}

@keyframes ripple {
  to {
    transform: scale(4);
  }
}
button,
a {
  @apply outline-0 focus-visible:ring-2 ring-blue-500;
}

.speech-pointer-bottom {
  position: absolute;
  bottom: 0;
  width: 0;
  height: 0;
  border: 10px solid transparent;
  border-bottom: 0;
  margin-left: -10px;
  margin-bottom: -10px;
  filter: drop-shadow(rgb(207, 217, 222) -1px 0px 0px);
  @apply border-t-white dark:border-t-dark-1;
}

.preformat {
  white-space: pre-wrap; /* Since CSS 2.1 */
  white-space: -moz-pre-wrap; /* Mozilla, since 1999 */
  white-space: -pre-wrap; /* Opera 4-6 */
  white-space: -o-pre-wrap; /* Opera 7 */
  word-wrap: break-word; /* Internet Explorer 5.5+ */
}

.card {
  perspective: 1200px;
}
.card.flipped .card-inner {
  transform: rotateY(180deg);
}
.card.flipped.reverse .card-inner {
  transform: rotateY(-180deg);
}
.card .card-inner {
  position: relative;
  width: 100%;
  height: 100%;
  text-align: center;
  transition: transform 0.8s;
  transform-style: preserve-3d;
}
.card .card-inner .card-front {
  backface-visibility: hidden;
}
.card .card-inner .card-back {
  backface-visibility: hidden;
  transform: rotateY(180deg);
}

.bg-card {
  background: linear-gradient(to right, #bf953f, #fcf6ba, #b38728, #fbf5b7, #aa771c);
}

.v-popper--theme-tooltip .v-popper__inner {
  background: var(--tooltipColor) !important;
}
.v-popper--theme-tooltip .v-popper__arrow-outer {
  border-color: var(--tooltipColor) !important;
}
.v-popper--theme-tooltip .v-popper__arrow-inner {
  visibility: visible;
  border-color: var(--tooltipColor) !important;
}

img.lazyLoad {
  transition: 0.5s;
  opacity: 0;
}
img.lazyLoad.isLoaded {
  opacity: 1;
}

.pswp__img {
  @apply object-cover;
}

.sortable-ghost {
  opacity: 1 !important;
}